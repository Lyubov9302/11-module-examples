{"version":3,"file":"11-practice.js","sources":["../src/11-practice.js"],"sourcesContent":["// Потрібно створити функціонал для отримання прогнозу погоди в місті.\n// Використай публічне API https://www.weatherapi.com/docs/\n// Використовуй ендпоінт Forecast для того, щоб отримати прогноз погоди на декілька днів.\n\n// Створи форму в яку користувач:\n// 1 вводить назву міста.\n// 2 обирає на яку кількість днів він хоче отримати прогноз погоди (3, 5 та 7 днів).\n// (Іноді параметр не працює в такому випадку можна зробити пошук на 1, 2 та 3 дні)\n// Приклад форми https://prnt.sc/kFmLOj6gBdv-\n\n// Після сабміту форми відмалюй картки з інформацією отриманою з бекенду.\n// Картка має містити відомості про:\n// 1 Зображення з погодою (icon)\n// 2 Текст з погодою (text)\n// 3 Дату (date)\n// 4 Середню температуру в Цельсія (avgtemp_c)\n// Приклад картки https://prnt.sc/h_p-A6Hty-i-\n\n\nconst BASE_URL = \"http://api.weatherapi.com/v1\";\nconst API_KEY = \"e924fd8ce48845e1a0b110735251707\";\n\nconst form = document.querySelector(\".js-search-form\");\nconst list = document.querySelector(\".js-list\");\n\nform.addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n    event.preventDefault();\n\n   \n\n    const { city, days } = event.currentTarget.elements;\n\n    serviceWeather(city.value, days.value)\n    .then(data => {\n        console.log(data)\n        list.innerHTML = createMarkup(data.forecast.forecastday);\n    })\n    .catch(error => {\n        list.innerHTML = `<h3>${error.message}</h3>`\n    })\n    .finally(() => {\n        event.target.reset();\n    })\n\n}\n\nfunction serviceWeather(city = \"\", days = 1) {\nconst params = new URLSearchParams({\n    key: API_KEY,\n    q: city,\n    days: days,\n    lang: \"uk\"\n})\n\n\nreturn fetch(`${BASE_URL}/forecast.json?${params}`)\n.then((result) => {\n    if(!result.ok) {\n        throw new Error(result.statusText);\n    }\n\n    return result.json();\n})\n}\n\nfunction createMarkup(arr) {\n    return arr.map(({date, day: { avgtemp_c, condition: { icon, text}}}) =>  `\n        <li class=\"weather-card>\n        <img src=\"${icon}\" alt=\"${text}\" class=\"weather-icon\"/>\n        <h2 class=\"\"weather-date\">${date}</h2>\n        <h3 class=\"weather-text\">${text}</h3>\n        <h3 class=\"temperature\">${avgtemp_c}°C</h3>\n        </li>\n\n        `\n    ).join(\"\");\n}"],"names":["BASE_URL","API_KEY","form","list","handleSubmit","event","city","days","serviceWeather","data","createMarkup","error","params","result","arr","date","avgtemp_c","icon","text"],"mappings":"oDAmBA,MAAMA,EAAW,+BACXC,EAAU,kCAEVC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAO,SAAS,cAAc,UAAU,EAE9CD,EAAK,iBAAiB,SAAUE,CAAY,EAE5C,SAASA,EAAaC,EAAO,CACzBA,EAAM,eAAc,EAIpB,KAAM,CAAE,KAAAC,EAAM,KAAAC,CAAI,EAAKF,EAAM,cAAc,SAE3CG,EAAeF,EAAK,MAAOC,EAAK,KAAK,EACpC,KAAKE,GAAQ,CACV,QAAQ,IAAIA,CAAI,EAChBN,EAAK,UAAYO,EAAaD,EAAK,SAAS,WAAW,CAC/D,CAAK,EACA,MAAME,GAAS,CACZR,EAAK,UAAY,OAAOQ,EAAM,OAAO,OAC7C,CAAK,EACA,QAAQ,IAAM,CACXN,EAAM,OAAO,OACrB,CAAK,CAEL,CAEA,SAASG,EAAeF,EAAO,GAAIC,EAAO,EAAG,CAC7C,MAAMK,EAAS,IAAI,gBAAgB,CAC/B,IAAKX,EACL,EAAGK,EACH,KAAMC,EACN,KAAM,IACV,CAAC,EAGD,OAAO,MAAM,GAAGP,CAAQ,kBAAkBY,CAAM,EAAE,EACjD,KAAMC,GAAW,CACd,GAAG,CAACA,EAAO,GACP,MAAM,IAAI,MAAMA,EAAO,UAAU,EAGrC,OAAOA,EAAO,MAClB,CAAC,CACD,CAEA,SAASH,EAAaI,EAAK,CACvB,OAAOA,EAAI,IAAI,CAAC,CAAC,KAAAC,EAAM,IAAK,CAAE,UAAAC,EAAW,UAAW,CAAE,KAAAC,EAAM,KAAAC,CAAI,CAAC,CAAC,IAAO;AAAA;AAAA,oBAEzDD,CAAI,UAAUC,CAAI;AAAA,oCACFH,CAAI;AAAA,mCACLG,CAAI;AAAA,kCACLF,CAAS;AAAA;AAAA;AAAA,SAI3C,EAAM,KAAK,EAAE,CACb"}